@page "/login"
@using GestWeb.Models
@using GestWeb.Services

@inject AuthenticationService AuthService

<div class="login-wrapper">
    <div class="@($"login-box{(isLoading ? " loading" : "")}")">
        <h3>Login</h3>
        <EditForm Model="@userApp" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="user">Usuário:</label>
                <InputText id="user" @bind-Value="@userApp.Name" class="form-control" disabled="@isLoading" />
            </div>
            <div class="form-group">
                <label for="password">Senha:</label>
                <InputText id="password" type="password" @bind-Value="@userApp.Password" class="form-control" disabled="@isLoading" />
            </div>
            <button type="submit" class="btn btn-primary" disabled="@isLoading">Entrar</button>
        </EditForm>
    </div>

    @if (isLoading)
    {
        <div class="login-overlay">
            <div class="loading-message">Realizando Login...</div>
        </div>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="login-overlay">
            <div class="error-message">@errorMessage</div>
        </div>
    }
</div>

@code {
    private UserApp userApp = new UserApp();
    private bool isLoading = false;
    private string errorMessage = "";

    private async Task HandleValidSubmit()
    {
        isLoading = true;
        errorMessage = "";
        StateHasChanged(); // Força a atualização da UI para desativar os campos e mostrar a tela de carregamento

        var result = await AuthService.LoginAsync(userApp);

        if (result)
        {
            // Sucesso...
        }
        else
        {
            errorMessage = "Erro ao realizar login";
            isLoading = false; // Mova para cá para que a tela escureça somente em caso de erro
            StateHasChanged(); // Atualiza a UI para mostrar a mensagem de erro
            await Task.Delay(3000);
            errorMessage = "";
        }

        StateHasChanged(); // Atualiza a UI para reativar os campos e botões
    }
}
